import * as ɵngcc0 from '@angular/core';
var SocketIoModule_1;
import * as tslib_1 from "tslib";
import { NgModule, InjectionToken } from '@angular/core';
import { WrappedSocket } from './socket-io.service';
/** Socket factory */
export function SocketFactory(config) {
    return new WrappedSocket(config);
}
export const SOCKET_CONFIG_TOKEN = new InjectionToken('__SOCKET_IO_CONFIG__');
let SocketIoModule = SocketIoModule_1 = class SocketIoModule {
    static forRoot(config) {
        return {
            ngModule: SocketIoModule_1,
            providers: [
                { provide: SOCKET_CONFIG_TOKEN, useValue: config },
                {
                    provide: WrappedSocket,
                    useFactory: SocketFactory,
                    deps: [SOCKET_CONFIG_TOKEN]
                }
            ]
        };
    }
};
SocketIoModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SocketIoModule });
SocketIoModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SocketIoModule_Factory(t) { return new (t || SocketIoModule)(); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SocketIoModule, [{
        type: NgModule,
        args: [{}]
    }], null, null); })();
export { SocketIoModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic29ja2V0LWlvLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsibmd4LXNvY2tldC1pby9zcmMvc29ja2V0LWlvLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUF1QixjQUFjLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFOUUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRXBELHFCQUFxQjtBQUNyQixNQUFNLFVBQVUsYUFBYSxDQUFDLE1BQXNCO0FBQ3BELElBQUksT0FBTyxJQUFJLGFBQWEsQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUNyQyxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQUcsSUFBSSxjQUFjLENBQWlCLHNCQUFzQixDQUFDLENBQUM7QUFHOUYsSUFBYSxjQUFjLHNCQUEzQixNQUFhLGNBQWM7QUFDM0IsSUFBSSxNQUFNLENBQUMsT0FBTyxDQUFDLE1BQXNCO0FBQUksUUFDckMsT0FBTztBQUNmLFlBQVksUUFBUSxFQUFFLGdCQUFjO0FBQ3BDLFlBQVksU0FBUyxFQUFFO0FBQ3ZCLGdCQUFnQixFQUFFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFO0FBQ2xFLGdCQUFnQjtBQUNoQixvQkFBb0IsT0FBTyxFQUFFLGFBQWE7QUFDMUMsb0JBQW9CLFVBQVUsRUFBRSxhQUFhO0FBQzdDLG9CQUFvQixJQUFJLEVBQUcsQ0FBQyxtQkFBbUIsQ0FBQztBQUNoRCxpQkFBaUI7QUFDakIsYUFBYTtBQUNiLFNBQVMsQ0FBQztBQUNWLElBQUksQ0FBQztBQUNMLENBQUUsQ0FBQTtBQWRXLGNBQWMsK0NBRDFCLFFBQVEsQ0FBQyxFQUFFO0FBQUMsSUFDQSxjQUFjLENBY3pCOzs7OzBCQUNGOztBQTNCQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFHQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQ0EsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFkQSxBQUFBLEFBREEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFjQSxBQWRBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgTW9kdWxlV2l0aFByb3ZpZGVycywgSW5qZWN0aW9uVG9rZW4gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgU29ja2V0SW9Db25maWcgfSBmcm9tICcuL2NvbmZpZy9zb2NrZXQtaW8uY29uZmlnJztcclxuaW1wb3J0IHsgV3JhcHBlZFNvY2tldCB9IGZyb20gJy4vc29ja2V0LWlvLnNlcnZpY2UnO1xyXG5cclxuLyoqIFNvY2tldCBmYWN0b3J5ICovXHJcbmV4cG9ydCBmdW5jdGlvbiBTb2NrZXRGYWN0b3J5KGNvbmZpZzogU29ja2V0SW9Db25maWcpIHtcclxuICAgIHJldHVybiBuZXcgV3JhcHBlZFNvY2tldChjb25maWcpO1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgU09DS0VUX0NPTkZJR19UT0tFTiA9IG5ldyBJbmplY3Rpb25Ub2tlbjxTb2NrZXRJb0NvbmZpZz4oJ19fU09DS0VUX0lPX0NPTkZJR19fJyk7XHJcblxyXG5ATmdNb2R1bGUoe30pXHJcbmV4cG9ydCBjbGFzcyBTb2NrZXRJb01vZHVsZSB7XHJcbiAgICBzdGF0aWMgZm9yUm9vdChjb25maWc6IFNvY2tldElvQ29uZmlnKTogTW9kdWxlV2l0aFByb3ZpZGVyczxTb2NrZXRJb01vZHVsZT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIG5nTW9kdWxlOiBTb2NrZXRJb01vZHVsZSxcclxuICAgICAgICAgICAgcHJvdmlkZXJzOiBbXHJcbiAgICAgICAgICAgICAgICB7IHByb3ZpZGU6IFNPQ0tFVF9DT05GSUdfVE9LRU4sIHVzZVZhbHVlOiBjb25maWcgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBwcm92aWRlOiBXcmFwcGVkU29ja2V0LFxyXG4gICAgICAgICAgICAgICAgICAgIHVzZUZhY3Rvcnk6IFNvY2tldEZhY3RvcnksXHJcbiAgICAgICAgICAgICAgICAgICAgZGVwcyA6IFtTT0NLRVRfQ09ORklHX1RPS0VOXVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBdXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuIH1cclxuIl19